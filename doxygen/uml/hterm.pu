@startuml

package "Core" {

' BTCore {{{
class BTCore {
   -data_codec : Codec
   -io_dev : IODev
}
' }}}

' IODev {{{
class IODev <<interface>> {
}

class IODevQExtSp {
}

IODev <|-- IODevQExtSp
' }}}

' Codec {{{
class Codec <<interface>> {
}

class CodecISO14230 {
}

class CodecMikas {
}

Codec <|-- CodecISO14230
Codec <|-- CodecMikas
' }}}

' DataMsg {{{
class DataMsg {
}
' }}}

' Event {{{
class Event <<interface>> {
}

class EventDataMsg {
   -message : DataMsg
   -direction : rx or tx
}

class EventSomething {
}

Event <|-- EventDataMsg
Event <|-- EventSomething
' }}}

BTCore o-- "1" Codec : data_codec
BTCore o-- "1" IODev : io_dev
BTCore o-- "*" DataMsg : messages

Codec ..> DataMsg : emit

BTCore ..> IODev   : listen for raw Rx data \n (QByteArray)
BTCore ..> Codec : put raw Rx data \n (QByteArray)
BTCore ..> Codec : listen for Rx \n DataMsg's
BTCore ..> Codec : encode data for Tx \n (put QByteArray, \n get DataMsg)
BTCore ..> IODev   : put raw data for Tx \n (QByteArray extracted \n from DataMsg)

BTCore ..> Event : emit

EventDataMsg o-- "1" DataMsg
}

package "Gui" {

   class SomeGUI {
   }

}

SomeGUI ..> BTCore : listen for events \n (Event)
SomeGUI o-- "*" Event : events


@enduml
