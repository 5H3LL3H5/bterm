
== HTerm ==

* [[scripts_organization]]



* main design UML: see hterm.pu
* Rx-Tx sequence UML: see rxrx.pu

* settings of `HTDataSrc` and `HTDataCodec`: they should return vector of `Field` instances, each field should be of some type (say, integer field is a subclass `FieldInt`), and may contain additional type-specific data. GUI should take this vector of `Field`s, display appropriate form, and get/set data. 
  More, `HTDataSrc` should have two sets of fields: one is "general", and the second one is "computer-specific". For example, baudrate is general, and port name is computer-specific.

=== todo ===

==== mandatory ====

   * [ ] project load/save
   * [ ] real data exchange
   * [ ] other protocols:
      * [ ] mikas
      * [ ] just cs
      * [ ] aldl


==== somewhat optional ====

   * [ ] ability to reorder handlers
   * [ ] indicate script errors
   * [ ] ability to switch some particular handler off (probably with checkbox at the very left)
   * [ ] codec should emit protocol-specific data when message is decoded, this data should be given to handlers
   * [ ] evaluate script only after code has changed
   * [ ] codec-specific standard handlers (should be called after all user's handlers)
   * [ ] codec-specific settings (probably QML is what we need?)
   * [ ] instantiable ByteArrReadWrite. It is needed for the next two items:
   * [ ] some script that runs just when project is opened (may perform some init)
   * [ ] set of other functions, non-handlers. They may be called when user presses button.

   * [ ] make HTDataMsg::toString() to return QString instead of std::string
   * [ ] remove visitor, since it isn't used




   * [X] script editing
   * [X] position save/restore
   * [X] write tests
      * [X] ByteArrRead
      * [X] ByteArrReadWrite
      * [X] ReqHandler

