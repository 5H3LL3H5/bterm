/*******************************************************************************
 *   Description:   TODO
 *
 ******************************************************************************/

#ifndef _HTDATAMSG_H
#define _HTDATAMSG_H

/*******************************************************************************
 * INCLUDED FILES
 ******************************************************************************/

#include <cstdint>

#include <vector>
#include <string>

#include "htdatapart.h"


using namespace std;


/*******************************************************************************
 * CLASS DECLARATION
 ******************************************************************************/

class HTDataMsg
{
   /****************************************************************************
    * TYPES
    ***************************************************************************/

   /****************************************************************************
    * CONSTRUCTOR, DESTRUCTOR
    ***************************************************************************/
public:
   explicit HTDataMsg();


   /****************************************************************************
    * PRIVATE DATA
    ***************************************************************************/
private:

   vector<HTDataPart> data_parts;


   /****************************************************************************
    * STATIC METHODS
    ***************************************************************************/

   /****************************************************************************
    * METHODS
    ***************************************************************************/

public:
   void addData(HTDataPart::Type type, const vector<uint8_t> &data);
   void addData(HTDataPart::Type type, uint8_t byte);

   void clear();

   vector<uint8_t> getUserData() const;
   vector<uint8_t> getRawData() const;

   std::string toString() const;

   /****************************************************************************
    * SIGNALS, SLOTS
    ***************************************************************************/


   /*******************************************************************************
    * OPERATORS
    ******************************************************************************/

public:
   inline bool operator==(const HTDataMsg &other) const {
      return (this->data_parts == other.data_parts);
   }
};


#endif // _HTDATAMSG_H
