/*******************************************************************************
 *   Description:   TODO
 *
 ******************************************************************************/

#ifndef _HTEVENT_VISITOR_HANDLE_H
#define _HTEVENT_VISITOR_HANDLE_H

/*******************************************************************************
 * INCLUDED FILES
 ******************************************************************************/

#include <QObject>

#include "htevent_visitor.h"


class Appl;
class HTDataMsg;

/*******************************************************************************
 * CLASS DECLARATION
 ******************************************************************************/

class HTEventVisitor_Handle : public HTEventVisitor
{
   Q_OBJECT
   /****************************************************************************
    * TYPES
    ***************************************************************************/

   /****************************************************************************
    * CONSTRUCTOR, DESTRUCTOR
    ***************************************************************************/
public:
   HTEventVisitor_Handle(Appl &appl);

   /****************************************************************************
    * PRIVATE DATA
    ***************************************************************************/
private:

   Appl &appl;

   /****************************************************************************
    * STATIC METHODS
    ***************************************************************************/

   /****************************************************************************
    * METHODS
    ***************************************************************************/
public:

   virtual void accept(HTEventDataRaw &htevent_data_raw) override;
   virtual void accept(HTEventDataMsg &htevent_data_msg) override;


   /****************************************************************************
    * SIGNALS, SLOTS
    ***************************************************************************/
signals:

   void newDataRaw(const std::vector<uint8_t> &data);
   void newDataMsg(const HTDataMsg &msg);

};


#endif // _HTEVENT_VISITOR_HANDLE_H
